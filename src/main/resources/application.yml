server:
  servlet:
    context-path: /grupos-service
  port: 0

spring:
  application:
    name: grupos-service 

  profiles:
    default: dev 

  config:
    #import: ${SPRING_CONFIG_IMPORT} # Importa la configuración externa desde config-server
    #import: optional:configserver:http://localhost:7777/
    import: optional:configserver:http://192.168.100.48:7777/

  datasource:
    username: ${db.username} 
    hikari:
      maximum-pool-size: 5 
      connection-timeout: 20000 
    url: ${db.url} 
    password: ${db.password} 

  cloud:
    stream:
      # Definición de los binders disponibles. Un binder es el puente entre tu app y el broker (Kafka).
      binders:
        kafka:
          type: kafka  # Indica que este binder es para Kafka
          environment:
            spring:
              kafka:
                bootstrap-servers: kafka:9093  # Dirección de tu servidor Kafka

      # Aquí defines los canales lógicos (bindings) que tu app usará para enviar o recibir mensajes
      bindings:
        output:
          destination: mi-topic  # Topic real en Kafka al que se enviarán los mensajes
          binder: kafka          # Usa el binder llamado "kafka" definido arriba

        input:
          destination: mi-topic  # Topic real en Kafka del que se recibirán los mensajes
          group: grupoA          # Grupo de consumidores (sirve para balancear carga y persistencia de offset)
          binder: kafka          # Usa también el binder de Kafka


logging:
  level:

    org:
      hibernate:
        SQL: DEBUG # Muestra las consultas SQL generadas por Hibernate en la consola
        type:
          descriptor:
            sql:
              BasicBinder: TRACE # Muestra también los valores que se "bindean" (asignan) a las consultas SQL

eureka:
  instance:
    instance-id: "${spring.application.name}:${random.value}" # ID único para registrar esta instancia en Eureka (evita duplicados)
  client:
    service-url:   
      defaultZone: http://192.168.100.48:8761/eureka/
      #defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v1/api-grupos

